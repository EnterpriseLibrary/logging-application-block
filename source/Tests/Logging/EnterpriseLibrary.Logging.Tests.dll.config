<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="EnterpriseLibrary.Logging.Configuration.LoggingSettings, EnterpriseLibrary.Logging" />
  </configSections>

  <loggingConfiguration tracingEnabled="true" defaultCategory="MockCategoryOne" logWarningsWhenNoCategoriesMatch="false" >
    <logFilters>
      <add
				name="Category"
				type="EnterpriseLibrary.Logging.Filters.CategoryFilter, EnterpriseLibrary.Logging"
				categoryFilterMode="AllowAllExceptDenied">
        <categoryFilters>
          <add name="MyDeniedCategory" />
          <add name="MyDeniedCategory2" />
          <add name="MyDeniedCategory3" />
          <add name="bad operation" />
        </categoryFilters>
      </add>
      <add
				name="Priority"
				type="EnterpriseLibrary.Logging.Filters.PriorityFilter, EnterpriseLibrary.Logging"
				minimumPriority="5"
					/>
    </logFilters>

    <categorySources>
      <add name="System.ServiceModel"
				switchValue="All">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
				name="cat1"
				switchValue="Off">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
				name="cat2"
				switchValue="Off">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
        name="ConsoleCategory"
        switchValue="Off">
        <listeners>
          <add name="ConsoleListener" />
        </listeners>
      </add>
      <add
				name="MockCategoryOne"
				 switchValue="All">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
				name="MockCategoryMany"
				switchValue="Verbose">
        <listeners>
          <add name="sharedMockListener" />
          <add name="sharedMockListener2" />
        </listeners>
      </add>
      <add
				name="FormattedCategory"
				switchValue="All">
        <listeners>
          <add name="SimpleTextFormatEventLog" />
        </listeners>
      </add>
      <add
				name="DictionaryCategory"
				switchValue="All">
        <listeners>
          <add name="DictionaryFormatEventLog" />
        </listeners>
      </add>
      <add
				name="DictionaryCategoryForFlatFile"
				switchValue="All">
        <listeners>
          <add name="DictionaryFormatFlatFile" />
        </listeners>
      </add>
      <add
				name="RollingCategory"
				switchValue="All">
        <listeners>
          <add name="RollingFlatFileTraceListener" />
        </listeners>
      </add>
      <add
				name="AppTest"
				switchValue="All">
        <listeners>
          <add name="ApplicationLog" />
        </listeners>
      </add>
      <add
				name="operation"
				switchValue="All">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
				name="nested operation"
				switchValue="All">
        <listeners>
          <add name="sharedMockListener" />
        </listeners>
      </add>
      <add
        name="RealCategoryMany"
				switchValue="Verbose">
        <listeners>
          <add name="DictionaryFormatFlatFile" />
          <add name="DictionaryFormatEventLog" />
        </listeners>
      </add>
    </categorySources>

    <specialSources>
      <errors name="errors" switchValue="All">
        <listeners>
          <add name="errorsMockListener" />
        </listeners>
      </errors>
    </specialSources>

    <listeners>
      <add name="sharedMockListener"
				type="EnterpriseLibrary.Logging.TestSupport.TraceListeners.MockTraceListener, EnterpriseLibrary.Logging.TestSupport"
				listenerDataType="EnterpriseLibrary.Logging.TestSupport.TraceListeners.MockTraceListenerData, EnterpriseLibrary.Logging.TestSupport"
				/>
      <add name="sharedMockListener2"
				type="EnterpriseLibrary.Logging.TestSupport.TraceListeners.MockTraceListener, EnterpriseLibrary.Logging.TestSupport"
				listenerDataType="EnterpriseLibrary.Logging.TestSupport.TraceListeners.MockTraceListenerData, EnterpriseLibrary.Logging.TestSupport"
				/>
      <add name="errorsMockListener"
				type="EnterpriseLibrary.Logging.TraceListeners.Tests.ErrorsMockTraceListener, EnterpriseLibrary.Logging.Tests"
				listenerDataType="EnterpriseLibrary.Logging.TestSupport.TraceListeners.MockTraceListenerData, EnterpriseLibrary.Logging.TestSupport"
				/>
      <add name="SimpleTextFormatEventLog"
				type="EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, EnterpriseLibrary.Logging"
				listenerDataType="EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, EnterpriseLibrary.Logging"
				source="EntLib Tests"
				formatter="SimpleTextFormat"
				/>
      <add name="DictionaryFormatEventLog"
				type="EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, EnterpriseLibrary.Logging"
				listenerDataType="EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, EnterpriseLibrary.Logging"
				source="EntLib Tests"
				formatter="DictionaryFormat"
				/>
      <add name="DictionaryFormatFlatFile"
				type="EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, EnterpriseLibrary.Logging"
				listenerDataType="EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, EnterpriseLibrary.Logging"
				fileName="FlatFileTestOutput\\EntLibLog.txt"
				header="----------header------------------"
				footer="----------footer------------------"
				formatter="DictionaryFormat"
				/>
      <add fileName="RollingFlatFileTestOutput\\RollingEntLibLog.txt" rollSizeKB="0" timeStampPattern="yyyy-MM-dd"
       rollFileExistsBehavior="Overwrite"
       rollInterval="None" formatter="" listenerDataType="EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, EnterpriseLibrary.Logging, Version=6.0.0.0"
       traceOutputOptions="None" type="EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, EnterpriseLibrary.Logging, Version=6.0.0.0"
       name="RollingFlatFileTraceListener" />
      <add name="ApplicationLog"
				type="System.Diagnostics.EventLogTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				listenerDataType="EnterpriseLibrary.Logging.Configuration.SystemDiagnosticsTraceListenerData, EnterpriseLibrary.Logging"
				initializeData="EntLib Tests"
				/>
      <add name="ConsoleListener"
           type="System.Diagnostics.ConsoleTraceListener,System,Version=2.0.0.0,Culture=neutral, PublicKeyToken=b77a5c561934e089"
           listenerDataType="EnterpriseLibrary.Logging.Configuration.SystemDiagnosticsTraceListenerData, EnterpriseLibrary.Logging"
       />
    </listeners>

    <formatters>
      <add
				name="XmlFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="&lt;EntLibLog&gt;{newline}{tab}&lt;message&gt;{message}&lt;/message&gt;{newline}{tab}&lt;timestamp&gt;{timestamp}&lt;/timestamp&gt;{newline}{tab}&lt;title&gt;{title}&lt;/title&gt;{newline}&lt;/EntLibLog&gt;"
				/>
      <add
				name="SimpleTextFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="{timestamp}: {title}{newline}{newline}{message}"
				/>
      <add
				name="CustomTextFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Acme Field1: {field1}{newline}Acme Field2: {field2}{newline}Acme Field3: {field3}{newline}{newline}Message: {message}"
				/>
      <add
				name="DictionaryFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Message: {message}{newline}{newline}Extended Properties:{newline}{dictionary(Key: {key}{tab}{tab}Value: {value}{newline})}"
				/>
      <add
				name="WrappingFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="BEGIN{message}END"
				/>
    </formatters>
  </loggingConfiguration>

  <system.diagnostics>
    <sources>
      <source name="customProvider">
        <listeners>
          <add
						name="listener"
						type="EnterpriseLibrary.Logging.TraceListeners.Tests.MockCustomTraceListener, EnterpriseLibrary.Logging.Tests"
						initializeData="custom initialization data"
						attribute="value"/>
        </listeners>
      </source>
      <source name="entlibproxy">
        <listeners>
          <clear/>
          <add name="entlibproxy"
							 type="EnterpriseLibrary.Logging.TraceListeners.EntLibLoggingProxyTraceListener, EnterpriseLibrary.Logging"/>
          <add name="entlibproxywithxpath"
							 type="EnterpriseLibrary.Logging.TraceListeners.EntLibLoggingProxyTraceListener, EnterpriseLibrary.Logging"
							 categoriesXPathQueries="//MessageLogTraceRecord/@Source"
							 namespaces="xmlns:pre='urn:test'"/>
          <add name="entlibproxywithmultiplexpaths"
							 type="EnterpriseLibrary.Logging.TraceListeners.EntLibLoggingProxyTraceListener, EnterpriseLibrary.Logging"
							 categoriesXPathQueries="//MessageLogTraceRecord/@Source;//MessageLogTraceRecord/@Source2"
							 namespaces="xmlns:pre='urn:test' xmlns:pre2='urn:test2'"/>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
</configuration>
