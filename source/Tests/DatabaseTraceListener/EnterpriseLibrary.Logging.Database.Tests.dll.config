<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="dataConfiguration" type="EnterpriseLibrary.Data.Configuration.DatabaseSettings, EnterpriseLibrary.Data" />
    <section name="loggingConfiguration" type="EnterpriseLibrary.Logging.Configuration.LoggingSettings, EnterpriseLibrary.Logging" />
  </configSections>

  <appSettings>
    <add key="SqlServerDatabaseInstance" value="(local)\sql2016" />
  </appSettings>

  <connectionStrings>
    <add
			name="LoggingDb"
			providerName="System.Data.SqlClient"
			connectionString="server=(local)\sql2016;database=Logging;Integrated Security=true" />
  </connectionStrings>

  <dataConfiguration defaultDatabase="LoggingDb">
  </dataConfiguration>

  <loggingConfiguration tracingEnabled="true" defaultCategory="FormattedCategory">
    <logFilters>
      <add
				name="Category"
				type="EnterpriseLibrary.Logging.Filters.CategoryFilter, EnterpriseLibrary.Logging"
				categoryFilterMode="AllowAllExceptDenied">
        <categoryFilters>
          <add name="MyDeniedCategory" />
          <add name="MyDeniedCategory2" />
          <add name="MyDeniedCategory3" />
          <add name="bad operation" />
        </categoryFilters>
      </add>
      <add
				name="Priority"
				type="EnterpriseLibrary.Logging.Filters.PriorityFilter, EnterpriseLibrary.Logging"
				minimumPriority="5"
					/>
    </logFilters>

    <categorySources>
      <add
				name="FormattedCategory"
				switchValue="All">
        <listeners>
          <add name="SimpleTextFormatDatabase" />
        </listeners>
      </add>
      <add
				name="DictionaryCategory"
				switchValue="All">
        <listeners>
          <add name="DictionaryFormatDatabase" />
        </listeners>
      </add>
    </categorySources>

    <specialSources>
      <errors name="errors" switchValue="All"/>
    </specialSources>

    <listeners>
      <add name="SimpleTextFormatDatabase"
				type="EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, EnterpriseLibrary.Logging.Database"
				listenerDataType="EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, EnterpriseLibrary.Logging.Database"
				databaseInstanceName="LoggingDb"
				writeLogStoredProcName="WriteLog"
				addCategoryStoredProcName="AddCategory"
				formatter="SimpleTextFormat"
				/>
      <add name="DictionaryFormatDatabase"
				type="EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, EnterpriseLibrary.Logging.Database"
				listenerDataType="EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, EnterpriseLibrary.Logging.Database"
				databaseInstanceName="LoggingDb"
				addCategoryStoredProcName="AddCategory"
				writeLogStoredProcName="WriteLog"
				formatter="DictionaryFormat"
				/>
    </listeners>

    <formatters>
      <add name="MyNewFormatter"
           type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
           template="{timestamp} whatever "
           />
      <add
				name="SimpleTextFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="{timestamp}: {title}{newline}{newline}{message}"
				/>
      <add
				name="DictionaryFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Message: {message}{newline}{newline}Extended Properties:{newline}{dictionary(Key: {key}{tab}{tab}Value: {value}{newline})}"
				/>
      <add
				name="WrappingFormat"
				type="EnterpriseLibrary.Logging.Formatters.TextFormatter, EnterpriseLibrary.Logging"
				template="BEGIN{message}END"
				/>
    </formatters>
  </loggingConfiguration>
</configuration>